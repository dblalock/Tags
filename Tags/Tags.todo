
X add a "new" button at the bottom of the table / bottom of screen
	make it work
	// not a button at bottom of screen

X edit names in some not-horrible way

X figure out why the 1st event gets lost when you collapse the same cell after opening it, but not when collapse a different cell
	> was selecting stuff and missed event was deselecting it

X make it actually modify types
	X -when you add/delete stuff
	X -when you rename stuff

X make it persist modifications to userdefaults

X move easily shareable treeview code into common superclass

// 135x162 = min timepicker dims; 165x162 = min datetime picker dims



// SELF: so this is getting f'd up by the fact that the unique Ids don't persist across app launches, so the typ identity comparisons all fail
	-fix this by having ability to init a typ with a particular id
		-although prolly a private constructor

	-aha: self: it's now breaking because we have an isEqual that recursively compares stuff until it gets to basic typs, but our dict for determining which cell typ to use is still using raw ids
		-crap, but we still need a consistent reuseIdentifier for each typ so that we can map instances to nibs
			-wait, this should be



make tags table / screen
	X extend superclass
	X start it with a dummy/example datapoint
	X get it to have the "+" cell at the bottom
	X get it to pick a tag typ from the other viewcontroller
	X get it to actually create a new entry from that tag typ
	X actually showing subtags
	X subtag cells based on typ
	X initing tag cells with correct values
	X editing subtag values so they affect the actual tag
	X recording crap
		X subclasses to match cell subclasses where necessary
		X factory method in something to create the appropriate one
		X make item start/stop recording
	X make changes in child tags alter duration in parent tag
	X store tag history
		convert to a big array of stuff in json
		datetimes as unix timestamps
		write out a file
		upload it to dropbox
	get it actually persisting stuff across app launches
	integrate iosense stuff
		X add everything via new logmanager class
		make sure it's actually working

//	SELF: make DBTagItem::reuseIdentifier use the func that searches for an appropriate parent typ identifier
	// if it isn't already

	ability to duplicate tags
		X copy tag typ
		with default value
	make everything a child of a day row
		or, alternatively, make each table a day and have some kind of horizontal switching between days

put in iOSense stuff
	add creationTimeMs to all DBTableItems

maybe untangle and write labels somehow for easier data crunching

------------------------------------------------
Refinements
------------------------------------------------
-edit typ fields
-sort history
-allow rearranging history, and have dropping something between 2 things with timestamps auto-set its start and end to the appropriate interval
-some kind of visualization
-settings to enable/disable location services, etc

//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
// Head 0?
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

================================================================
Head 1
================================================================

------------------------------------------------
Head2
------------------------------------------------

================================
Head3
================================

------------------------
Head4
------------------------


//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
// this one is the best...let's do this

// ================================================================
// Head 1
// ================================================================

//------------------------------------------------
// Head2
//------------------------------------------------

//------------------------ Head 3


//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX


================================================================
Head 1
================================================================

------------------------ Head 2 ------------------------

================================ Head 3

------------------------ Head 4

